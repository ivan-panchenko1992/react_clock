{"version":3,"sources":["Components/Clock.js","App.js","index.js"],"names":["Clock","state","date","Date","this","timerId","setInterval","console","log","toLocaleTimeString","setState","prevProps","prevState","name","props","clearInterval","timerID","time","React","Component","App","isClockVisible","clockName","setRandomName","randomName","Math","random","showClock","hideClock","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMA2CeA,G,kNAvCbC,MAAO,CACLC,KAAM,IAAIC,M,uDAGZ,WAAqB,IAAD,OAClBC,KAAKC,QAAUC,aAAY,WAEzBC,QAAQC,IAAI,EAAKP,MAAMC,KAAKO,sBAC5B,EAAKC,SAAS,CAAER,KAAM,IAAIC,SACzB,O,gCAGL,SAAmBQ,EAAWC,GACxBD,EAAUE,OAAST,KAAKU,MAAMD,MAElCN,QAAQC,IAAR,qCAA0CG,EAAUE,KAApD,eAA+DT,KAAKU,MAAMD,KAA1E,Q,kCAIF,WACEE,cAAcX,KAAKY,W,oBAGrB,WACE,IAAMC,EAAOb,KAAKH,MAAMC,KAAKO,qBAE7B,OACE,2CAEG,IACAQ,O,GA/BWC,IAAMC,YCyDXC,E,4MAvDbnB,MAAQ,CACNoB,gBAAgB,EAChBC,UAAW,G,EAGbC,cAAgB,WACd,IAAMC,EAAaC,KAAKC,SAExB,EAAKhB,SAAS,CACZY,UAAWE,K,EAIfG,UAAY,WACV,EAAKjB,SAAS,CACZW,gBAAgB,K,EAIpBO,UAAY,WACV,EAAKlB,SAAS,CACZW,gBAAgB,K,4CAIpB,WAAU,IACAA,EAAmBjB,KAAKH,MAAxBoB,eAER,OACE,yBAAKQ,UAAU,OACb,2CACCR,GAAkB,kBAAC,EAAD,CAAOR,KAAMT,KAAKH,MAAMqB,YAC3C,4BACEQ,KAAK,SACLC,QAAS3B,KAAKuB,WAFhB,cAMA,4BACEG,KAAK,SACLC,QAAS3B,KAAKwB,WAFhB,cAMA,4BACEE,KAAK,SACLC,QAAS3B,KAAKmB,eAFhB,wB,GA7CUL,IAAMC,WCAxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.40933fed.chunk.js","sourcesContent":["import React from 'react';\nimport Proptypes from 'prop-types';\n\nclass Clock extends React.Component {\n  state= {\n    date: new Date(),\n  }\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n    console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}.`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  render() {\n    const time = this.state.date.toLocaleTimeString();\n\n    return (\n      <p>\n        Current time:\n        {' '}\n        {time}\n      </p>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: Proptypes.number.isRequired,\n};\nexport default Clock;\n","import React from 'react';\nimport './App.scss';\nimport Clock from './Components/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  }\n\n  setRandomName = () => {\n    const randomName = Math.random();\n\n    this.setState({\n      clockName: randomName,\n    });\n  }\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  }\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  }\n\n  render() {\n    const { isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {isClockVisible && <Clock name={this.state.clockName} />}\n        <button\n          type=\"button\"\n          onClick={this.showClock}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.hideClock}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.setRandomName}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}